name: meme-generator-rs

on:
  workflow_dispatch:
    inputs:
      repository:
        description: "要构建的仓库名称"
        required: true
        type: string
      ref:
        description: "要构建的分支或标签"
        required: true
        type: string
        default: "main"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.repository }}-${{ github.event.inputs.ref }}
  cancel-in-progress: true

jobs:
  build_windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
            label: windows-x86_64

    steps:
      - name: 获取token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: 获取用户ID
        id: get-user-id
        shell: bash
        run: |
          user_id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)
          echo "user-id=$user_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: 检出代码
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
          token: ${{ steps.app-token.outputs.token }}

      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@1.85.0

      - name: 启用 Rust 缓存
        uses: swatinem/rust-cache@v2
        with:
          prefix-key: meme-generator-rs

      - name: 添加目标平台
        run: rustup target add ${{ matrix.platform.target }}

      - name: 构建目标文件
        run: cargo build --release --target ${{ matrix.platform.target }} --bin meme --features server

      - name: 压缩文件
        uses: vimtor/action-zip@v1.2
        with:
          files: target/${{ matrix.platform.target }}/release/meme.exe
          dest: meme.zip

      - name: 构建文件
        run: |
          git config --global --add safe.directory (Get-Location).Path
          New-Item -Path "${{ runner.temp }}/temp/${{ matrix.platform.target }}" -ItemType Directory -Force
          Copy-Item -Path @("meme.zip", ".git") -Destination "${{ runner.temp }}/temp/${{ matrix.platform.target }}" -Recurse

      - name: 获取最新提交信息
        shell: bash
        run: |
          echo "commit_msg=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: 提交并推送更改
        uses: actions-js/push@master
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          author_email: "${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
          author_name: "${{ steps.app-token.outputs.app-slug }}[bot]"
          amend: true
          force: true
          directory: ${{ runner.temp }}/temp/${{ matrix.platform.target }}
          message: ${{ env.commit_msg }}
          branch: "build-windows"
          repository: ${{ github.event.inputs.repository }}

  build_macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64-apple-darwin
            label: macos-x86_64
          - runner: macos-latest
            target: aarch64-apple-darwin
            label: macos-aarch64

    steps:
      - name: 获取token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: 获取用户ID
        id: get-user-id
        shell: bash
        run: |
          user_id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)
          echo "user-id=$user_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: 检出代码
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
          token: ${{ steps.app-token.outputs.token }}

      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@1.85.0

      - name: 启用 Rust 缓存
        uses: swatinem/rust-cache@v2
        with:
          prefix-key: meme-generator-rs

      - name: 添加目标平台
        run: rustup target add ${{ matrix.platform.target }}

      - name: 构建目标文件
        run: cargo build --release --target ${{ matrix.platform.target }} --bin meme --features server

      - name: 压缩文件
        uses: vimtor/action-zip@v1.2
        with:
          files: target/${{ matrix.platform.target }}/release/meme
          dest: meme.zip

      - name: 构建文件
        run: |
          git config --global --add safe.directory "$(pwd)"
          mkdir -p "${{ runner.temp }}/temp/${{ matrix.platform.target }}"
          cp -r meme.zip .git "${{ runner.temp }}/temp/${{ matrix.platform.target }}"

      - name: 获取最新提交信息
        shell: bash
        run: |
          echo "commit_msg=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: 提交并推送更改
        uses: actions-js/push@master
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          author_email: "${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
          author_name: "${{ steps.app-token.outputs.app-slug }}[bot]"
          message: ${{ env.commit_msg }}
          amend: true
          force: true
          directory: ${{ runner.temp }}/temp/${{ matrix.platform.target }}
          branch: ${{ matrix.platform.target == 'x86_64-apple-darwin' && 'build-macos-x86_64' ||'build-macos-aarch64' }}
          repository: ${{ github.event.inputs.repository }}

  build_linux:
    runs-on: ${{ matrix.platform.runner }}
    container: ${{ matrix.platform.container }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            container: ghcr.io/memecrafters/meme-generator-build-container:latest
            target: x86_64-unknown-linux-gnu
            label: linux-x86_64

    steps:
      - name: 设置 gh
        uses: sersoft-gmbh/setup-gh-cli-action@v2
        with:
          version: stable

      - name: 获取token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: 获取用户ID
        id: get-user-id
        run: |
          user_id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)
          echo "user-id=$user_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: 检出代码
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
          token: ${{ steps.app-token.outputs.token }}

      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@1.85.0

      - name: 启用 Rust 缓存
        uses: swatinem/rust-cache@v2
        with:
          prefix-key: meme-generator-rs

      - name: 添加目标平台
        run: rustup target add ${{ matrix.platform.target }}

      - name: 构建目标文件
        run: cargo build --release --target ${{ matrix.platform.target }} --bin meme --features server,vendored,embed-freetype

      - name: 压缩文件
        uses: vimtor/action-zip@v1.2
        with:
          files: "target/${{ matrix.platform.target }}/release/meme"
          dest: meme.zip

      - name: 构建文件
        run: |
          git config --global --add safe.directory "$(pwd)" 
          mkdir -p /temp/${{ matrix.platform.target }}
          cp -r meme.zip .git /temp/${{ matrix.platform.target }}

      - name: 获取最新提交信息
        run: |
          echo "commit_msg=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: 提交并推送更改
        uses: actions-js/push@master
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          author_email: "${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
          author_name: "${{ steps.app-token.outputs.app-slug }}[bot]"
          message: ${{ env.commit_msg }}
          amend: true
          force: true
          directory: /temp/${{ matrix.platform.target }}
          branch: "build-linux"
          repository: ${{ github.event.inputs.repository }}

  update-resources:
    needs: [build_windows, build_macos, build_linux]
    runs-on: ubuntu-latest
    steps:
      - name: 获取token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: 获取用户ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: 检出代码
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
          token: ${{ steps.app-token.outputs.token }}

      - name: 设置 Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 更新资源文件
        run: python scripts/update_resources.py

      - name: 获取时间
        run: |
          TIME="$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"
          echo "TIME=$TIME" >> $GITHUB_ENV

      - name: 提交并推送
        uses: actions-js/push@master
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          author_email: '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          author_name: '${{ steps.app-token.outputs.app-slug }}[bot]'
          repository: '${{ github.event.inputs.repository }}'
          message: "更新资源文件 [${{ env.TIME }}]" 
          branch: "main"

      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          repository: 'ClarityJS/meme-data'
          path: 'meme-data'
          ref: 'main'
          token: ${{ steps.app-token.outputs.token }}

      - name: 复制资源文件
        run: cp -r resources meme-data

      - name: 推送到表情资源仓库
        uses: actions-js/push@master
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          author_email: '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          author_name: '${{ steps.app-token.outputs.app-slug }}[bot]'
          repository: 'ClarityJS/meme-data'
          directory: 'meme-data'
          message: "更新资源文件 [${{ env.TIME }}]" 
          branch: "main"
